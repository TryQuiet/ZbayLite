// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main renders component 1`] = `
<Fragment>
  <Memo(Connect(withModal(Component))) />
  <Connect(Component) />
  <Memo(WithStyles(WindowWrapper))>
    <WithStyles(ForwardRef(Grid))
      className="gridRoot-mock"
      container={true}
      direction="row"
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
      >
        <Memo(WithStyles(Sidebar)) />
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Grid))
        item={true}
        xs={true}
      >
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(Channel)",
                "type": [Function],
              },
            }
          }
          path="test/channel/:id"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(DirectMessages)",
                "type": [Function],
              },
            }
          }
          path="test/direct-messages/:id/:username"
        />
        <Route
          component={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(Channel)",
                "type": [Function],
              },
            }
          }
          path="test/offers/:id/:address"
        />
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
  </Memo(WithStyles(WindowWrapper))>
</Fragment>
`;
