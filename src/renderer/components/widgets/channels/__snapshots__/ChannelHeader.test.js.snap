// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChannelHeader renders component 1`] = `
<div
  className="wrapper-mock"
>
  <WithStyles(ForwardRef(Grid))
    alignItems="center"
    className="root-mock"
    container={true}
    direction="row"
    justify="space-between"
  >
    <WithStyles(ForwardRef(Grid))
      item={true}
    >
      <WithStyles(ForwardRef(Grid))
        alignItems="center"
        container={true}
        item={true}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <WithStyles(ForwardRef(Typography))
            className="title-mock bold-mock"
            noWrap={true}
            style={
              Object {
                "maxWidth": 0,
              }
            }
            variant="subtitle1"
          >
            #Channel 1
          </WithStyles(ForwardRef(Typography))>
        </WithStyles(ForwardRef(Grid))>
        <Memo(WithStyles(Tooltip))
          placement="bottom"
          title="Unmute"
        >
          <WithStyles(ForwardRef(Grid))
            className="silenceDiv-mock"
            item={true}
            onClick={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <Memo(Icon)
              src="test-file-stub"
            />
          </WithStyles(ForwardRef(Grid))>
        </Memo(WithStyles(Tooltip))>
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
    <WithStyles(ForwardRef(Grid))
      alignContent="center"
      alignItems="center"
      className="actions-mock"
      container={true}
      item={true}
      justify="flex-end"
      xs={true}
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
      >
        <withRouter(Connect(Component))
          directMessage={false}
        />
        <Connect(withModal(Component))
          channel={
            Object {
              "address": "zs1testaddress1",
              "advertFee": 0.15,
              "description": "Channel about 1",
              "id": 1,
              "keys": Object {
                "ivk": "incoming-viewing-key-1",
                "sk": "test-secret-key",
              },
              "name": "Channel 1",
              "private": true,
              "unread": 12,
            }
          }
        />
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(Grid))>
</div>
`;

exports[`ChannelHeader renders members when 0 1`] = `
<div
  className="wrapper-mock"
>
  <WithStyles(ForwardRef(Grid))
    alignItems="center"
    className="root-mock"
    container={true}
    direction="row"
    justify="space-between"
  >
    <WithStyles(ForwardRef(Grid))
      item={true}
    >
      <WithStyles(ForwardRef(Grid))
        alignItems="center"
        container={true}
        item={true}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <WithStyles(ForwardRef(Typography))
            className="title-mock bold-mock"
            noWrap={true}
            style={
              Object {
                "maxWidth": 0,
              }
            }
            variant="subtitle1"
          >
            #Channel 1
          </WithStyles(ForwardRef(Typography))>
        </WithStyles(ForwardRef(Grid))>
        <Memo(WithStyles(Tooltip))
          placement="bottom"
          title="Unmute"
        >
          <WithStyles(ForwardRef(Grid))
            className="silenceDiv-mock"
            item={true}
            onClick={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <Memo(Icon)
              src="test-file-stub"
            />
          </WithStyles(ForwardRef(Grid))>
        </Memo(WithStyles(Tooltip))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Typography))
        className="subtitle-mock"
        variant="caption"
      >
        1
         
        Participants
      </WithStyles(ForwardRef(Typography))>
    </WithStyles(ForwardRef(Grid))>
    <WithStyles(ForwardRef(Grid))
      alignContent="center"
      alignItems="center"
      className="actions-mock"
      container={true}
      item={true}
      justify="flex-end"
      xs={true}
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
      >
        <withRouter(Connect(Component))
          directMessage={false}
        />
        <Connect(withModal(Component))
          channel={
            Object {
              "address": "zs1testaddress1",
              "advertFee": 0.15,
              "description": "Channel about 1",
              "id": 1,
              "keys": Object {
                "ivk": "incoming-viewing-key-1",
                "sk": "test-secret-key",
              },
              "name": "Channel 1",
              "private": true,
              "unread": 12,
            }
          }
        />
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(Grid))>
</div>
`;

exports[`ChannelHeader renders without members count 1`] = `
<div
  className="wrapper-mock"
>
  <WithStyles(ForwardRef(Grid))
    alignItems="center"
    className="root-mock"
    container={true}
    direction="row"
    justify="space-between"
  >
    <WithStyles(ForwardRef(Grid))
      item={true}
    >
      <WithStyles(ForwardRef(Grid))
        alignItems="center"
        container={true}
        item={true}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
        >
          <WithStyles(ForwardRef(Typography))
            className="title-mock bold-mock"
            noWrap={true}
            style={
              Object {
                "maxWidth": 0,
              }
            }
            variant="subtitle1"
          >
            #Channel 1
          </WithStyles(ForwardRef(Typography))>
        </WithStyles(ForwardRef(Grid))>
        <Memo(WithStyles(Tooltip))
          placement="bottom"
          title="Unmute"
        >
          <WithStyles(ForwardRef(Grid))
            className="silenceDiv-mock"
            item={true}
            onClick={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
          >
            <Memo(Icon)
              src="test-file-stub"
            />
          </WithStyles(ForwardRef(Grid))>
        </Memo(WithStyles(Tooltip))>
      </WithStyles(ForwardRef(Grid))>
      <WithStyles(ForwardRef(Typography))
        className="subtitle-mock"
        variant="caption"
      >
        5
         
        Participants
      </WithStyles(ForwardRef(Typography))>
    </WithStyles(ForwardRef(Grid))>
    <WithStyles(ForwardRef(Grid))
      alignContent="center"
      alignItems="center"
      className="actions-mock"
      container={true}
      item={true}
      justify="flex-end"
      xs={true}
    >
      <WithStyles(ForwardRef(Grid))
        item={true}
      >
        <withRouter(Connect(Component))
          directMessage={false}
        />
        <Connect(withModal(Component))
          channel={
            Object {
              "address": "zs1testaddress1",
              "advertFee": 0.15,
              "description": "Channel about 1",
              "id": 1,
              "keys": Object {
                "ivk": "incoming-viewing-key-1",
                "sk": "test-secret-key",
              },
              "name": "Channel 1",
              "private": true,
              "unread": 12,
            }
          }
        />
      </WithStyles(ForwardRef(Grid))>
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(Grid))>
</div>
`;
