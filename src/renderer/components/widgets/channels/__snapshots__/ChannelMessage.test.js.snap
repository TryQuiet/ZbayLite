// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChannelMessage renders component 1`] = `
<Connect(Component)
  actionsOpen={false}
  message={
    Object {
      "blockHeight": 9007199254740991,
      "createdAt": 1551960228,
      "error": null,
      "fromYou": false,
      "id": 1,
      "isUnregistered": false,
      "message": "This is some message 1",
      "offerOwner": null,
      "publicKey": null,
      "receiver": Object {
        "publicKey": "",
        "replyTo": "",
        "username": "Unnamed",
      },
      "sender": Object {
        "publicKey": "",
        "replyTo": "",
        "username": "Unnamed",
      },
      "shippingData": null,
      "signature": Object {
        "data": Array [
          34,
          14,
          37,
          27,
          56,
          163,
          111,
          87,
          76,
          223,
          43,
          110,
          65,
          27,
          73,
          254,
          246,
          147,
          66,
          102,
          51,
          165,
          41,
          206,
          169,
          238,
          227,
          171,
          4,
          139,
          132,
          236,
          76,
          192,
          215,
          65,
          40,
          100,
          213,
          19,
          126,
          48,
          126,
          60,
          90,
          134,
          24,
          118,
          148,
          16,
          38,
          9,
          45,
          253,
          123,
          128,
          199,
          58,
          177,
          108,
          81,
          40,
          51,
          88,
        ],
        "type": "Buffer",
      },
      "spent": "0",
      "status": "broadcasted",
      "tag": "",
      "type": 1,
    }
  }
  setActionsOpen={[Function]}
>
  <WithStyles(ForwardRef(Grid))
    className="messageInput-mock"
    item={true}
  >
    <WithStyles(ForwardRef(Typography))
      className="message-mock"
      variant="body2"
    />
  </WithStyles(ForwardRef(Grid))>
</Connect(Component)>
`;

exports[`ChannelMessage renders component when message is sent by owner 1`] = `
<Connect(Component)
  actionsOpen={false}
  message={
    Object {
      "blockHeight": 9007199254740991,
      "createdAt": 1551960228,
      "error": null,
      "fromYou": true,
      "id": 1,
      "isUnregistered": false,
      "message": "This is some message 1",
      "offerOwner": null,
      "publicKey": null,
      "receiver": Object {
        "publicKey": "",
        "replyTo": "",
        "username": "Unnamed",
      },
      "sender": Object {
        "publicKey": "",
        "replyTo": "",
        "username": "Unnamed",
      },
      "shippingData": null,
      "signature": Object {
        "data": Array [
          34,
          14,
          37,
          27,
          56,
          163,
          111,
          87,
          76,
          223,
          43,
          110,
          65,
          27,
          73,
          254,
          246,
          147,
          66,
          102,
          51,
          165,
          41,
          206,
          169,
          238,
          227,
          171,
          4,
          139,
          132,
          236,
          76,
          192,
          215,
          65,
          40,
          100,
          213,
          19,
          126,
          48,
          126,
          60,
          90,
          134,
          24,
          118,
          148,
          16,
          38,
          9,
          45,
          253,
          123,
          128,
          199,
          58,
          177,
          108,
          81,
          40,
          51,
          88,
        ],
        "type": "Buffer",
      },
      "spent": "0",
      "status": "broadcasted",
      "tag": "",
      "type": 1,
    }
  }
  setActionsOpen={[Function]}
>
  <WithStyles(ForwardRef(Grid))
    className="messageInput-mock"
    item={true}
  >
    <WithStyles(ForwardRef(Typography))
      className="message-mock"
      variant="body2"
    />
  </WithStyles(ForwardRef(Grid))>
</Connect(Component)>
`;
