// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ChannelInput renders component input Disable  1`] = `
<WithStyles(ForwardRef(Grid))
  className="root-mock displayNone-mock"
  container={true}
  direction="column"
  justify="center"
>
  <Memo(WithStyles(MentionPoper))
    selected={0}
  />
  <ForwardRef(Fade)
    in={true}
  >
    <WithStyles(ForwardRef(Grid))
      alignItems="center"
      className="backdrop-mock"
      container={true}
      direction="column"
      justify="center"
    >
      <WarningIcon
        className="warningIcon-mock"
      />
      <WithStyles(ForwardRef(Typography))
        align="center"
        variant="caption"
      >
        Sending messages is locked due to insufficient funds - this may be resolved by topping up your account
      </WithStyles(ForwardRef(Typography))>
    </WithStyles(ForwardRef(Grid))>
  </ForwardRef(Fade)>
  <WithStyles(ForwardRef(Grid))
    alignItems="center"
    className="inputsDiv-mock"
    container={true}
    direction="row"
    justify="center"
    spacing={0}
  >
    <ForwardRef(ClickAwayListener)
      onClickAway={[Function]}
    >
      <WithStyles(ForwardRef(Grid))
        alignItems="center"
        className="textfield-mock"
        container={true}
        item={true}
        justify="center"
        xs={true}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={true}
        >
          <ContentEditable
            className="input-mock"
            html="this is just a test message"
            onChange={[Function]}
            onClick={[Function]}
            onKeyDown={[Function]}
            placeholder="Message test"
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          className="actions-mock"
          item={true}
        >
          <WithStyles(ForwardRef(Grid))
            alignItems="center"
            container={true}
            justify="center"
          >
            <Connect(Component)
              disabled={true}
            />
            <Component
              className="emoji-mock"
              onClickHandler={[Function]}
              onMouseEnterHandler={[Function]}
              onMouseLeaveHandler={[Function]}
              src="test-file-stub"
            />
          </WithStyles(ForwardRef(Grid))>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </ForwardRef(ClickAwayListener)>
  </WithStyles(ForwardRef(Grid))>
  <TypingIndicator />
</WithStyles(ForwardRef(Grid))>
`;

exports[`ChannelInput renders component input Locked  1`] = `
<WithStyles(ForwardRef(Grid))
  className="root-mock displayNone-mock"
  container={true}
  direction="column"
  justify="center"
>
  <Memo(WithStyles(MentionPoper))
    selected={0}
  />
  <ForwardRef(Fade)
    in={true}
  >
    <WithStyles(ForwardRef(Grid))
      alignItems="center"
      className="backdrop-mock"
      container={true}
      direction="column"
      justify="center"
    >
      <WarningIcon
        className="warningIcon-mock"
      />
      <WithStyles(ForwardRef(Typography))
        align="center"
        variant="caption"
      >
        All of your funds are locked - please wait for network confirmation or deposit more ZEC to your account
      </WithStyles(ForwardRef(Typography))>
    </WithStyles(ForwardRef(Grid))>
  </ForwardRef(Fade)>
  <WithStyles(ForwardRef(Grid))
    alignItems="center"
    className="inputsDiv-mock"
    container={true}
    direction="row"
    justify="center"
    spacing={0}
  >
    <ForwardRef(ClickAwayListener)
      onClickAway={[Function]}
    >
      <WithStyles(ForwardRef(Grid))
        alignItems="center"
        className="textfield-mock"
        container={true}
        item={true}
        justify="center"
        xs={true}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={true}
        >
          <ContentEditable
            className="input-mock"
            html="this is just a test message"
            onChange={[Function]}
            onClick={[Function]}
            onKeyDown={[Function]}
            placeholder="Message test"
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          className="actions-mock"
          item={true}
        >
          <WithStyles(ForwardRef(Grid))
            alignItems="center"
            container={true}
            justify="center"
          >
            <Connect(Component)
              disabled={true}
            />
            <Component
              className="emoji-mock"
              onClickHandler={[Function]}
              onMouseEnterHandler={[Function]}
              onMouseLeaveHandler={[Function]}
              src="test-file-stub"
            />
          </WithStyles(ForwardRef(Grid))>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </ForwardRef(ClickAwayListener)>
  </WithStyles(ForwardRef(Grid))>
  <TypingIndicator />
</WithStyles(ForwardRef(Grid))>
`;

exports[`ChannelInput renders component input available  1`] = `
<WithStyles(ForwardRef(Grid))
  className="root-mock"
  container={true}
  direction="column"
  justify="center"
>
  <Memo(WithStyles(MentionPoper))
    selected={0}
  />
  <WithStyles(ForwardRef(Grid))
    alignItems="center"
    className="inputsDiv-mock"
    container={true}
    direction="row"
    justify="center"
    spacing={0}
  >
    <ForwardRef(ClickAwayListener)
      onClickAway={[Function]}
    >
      <WithStyles(ForwardRef(Grid))
        alignItems="center"
        className="textfield-mock"
        container={true}
        item={true}
        justify="center"
        xs={true}
      >
        <WithStyles(ForwardRef(Grid))
          item={true}
          xs={true}
        >
          <ContentEditable
            className="input-mock"
            html="this is just a test message"
            onChange={[Function]}
            onClick={[Function]}
            onKeyDown={[Function]}
            placeholder="Message test"
          />
        </WithStyles(ForwardRef(Grid))>
        <WithStyles(ForwardRef(Grid))
          className="actions-mock"
          item={true}
        >
          <WithStyles(ForwardRef(Grid))
            alignItems="center"
            container={true}
            justify="center"
          >
            <Connect(Component)
              disabled={false}
            />
            <Component
              className="emoji-mock"
              onClickHandler={[Function]}
              onMouseEnterHandler={[Function]}
              onMouseLeaveHandler={[Function]}
              src="test-file-stub"
            />
          </WithStyles(ForwardRef(Grid))>
        </WithStyles(ForwardRef(Grid))>
      </WithStyles(ForwardRef(Grid))>
    </ForwardRef(ClickAwayListener)>
  </WithStyles(ForwardRef(Grid))>
  <TypingIndicator />
</WithStyles(ForwardRef(Grid))>
`;
