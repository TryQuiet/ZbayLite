name: CI

on:
  push:
    branches:
      - feature/build-indexnode-cli

jobs:
  build_on_windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1.0.0
    - uses: actions/setup-node@master
      with:
        node-version: '12'
    - name: fetch jsign
      shell: bash
      run: curl https://zbay-binaries.s3.us-east-2.amazonaws.com/jsign/jsign-2.1.jar --output ./jsign-2.1.jar
    - name: Add Windows certificate
      id: write_file
      uses: timheuer/base64-to-file@v1.0.3
      with:
        fileName: 'win-certificate.pfx'
        encodedString: ${{ secrets.WIN_CSC_LINK }}
    - name: install dependencies
      shell: bashcp
      run: npm install
    - name: pull tor binary
      shell: bash
      run: curl https://zbay-binaries.s3.us-east-2.amazonaws.com/win32/tor.exe --output ./tor/tor.exe
    - name: build on Windows
      shell: bash
      run: npm run build:prod
    - name: install electron builder
      shell: bash
      run: npm install -g electron-builder@22.3.2
    - name: download rust
      shell: bash
      run: curl https://static.rust-lang.org/rustup/dist/i686-pc-windows-gnu/rustup-init.exe --output ./rustup-init.exe
    - name: install rust
      shell: bash
      run: ./rustup-init.exe -y
    - name: build binary
      shell: bash
      run: npm run neonWin
    - name: release
      shell: bash
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}export 
        CERTIFICATE_PATH: ${{ steps.write_file.outputs.filePath }}
        WIN_CSC_KEY_PASSWORD: ${{ secrets.WIN_CSC_KEY_PASSWORD }}
        WINDOWS_ALIAS: ${{ secrets.WINDOWS_ALIAS }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        USE_HARD_LINKS: false
      run: electron-builder -p always --win